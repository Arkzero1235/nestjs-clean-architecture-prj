// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  userName     String
  email        String   @unique
  passwordHash String
  address      String
  phone        String
  role         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  comments Comment[]
  orders   Order[]
}

model Admin {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  phone    String
  role     String

  orders  Order[]
  sliders Slider[]
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  userId    String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

model Category {
  id   String @id @default(uuid())
  name String

  products Product[]
}

model Order {
  id        String   @id @default(uuid())
  userId    String
  adminId   String?
  total     Float
  status    String
  createdAt DateTime @default(now())

  user    User          @relation(fields: [userId], references: [id])
  admin   Admin?        @relation(fields: [adminId], references: [id])
  details OrderDetail[]
}

model OrderDetail {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  status    String
  total     Float
  createdAt DateTime @default(now())

  product Product @relation(fields: [productId], references: [id])
  order   Order   @relation(fields: [orderId], references: [id])
}

model Product {
  id         String   @id @default(uuid())
  name       String
  price      Float
  image      String
  stock      Int
  views      Int
  categoryId String
  createdAt  DateTime @default(now())

  category     Category      @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  orderDetails OrderDetail[]
}

model Slider {
  id      String @id @default(uuid())
  title   String
  url     String
  image   String
  adminId String

  admin Admin @relation(fields: [adminId], references: [id])
}
